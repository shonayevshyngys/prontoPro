version: "3.8"
services:
  postgres:
    image: postgres:10-alpine3.16
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rating_service
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d rating_service -U postgres" ]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 80s

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"

  proxy:
    image: nginx
    volumes:
      - type: bind
        source: ../configs/nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true
    ports:
      - "80:80"
    depends_on:
      rating-service:
        condition: service_started
      notification-service:
        condition: service_started

  rating-service:
    build:
      context: ..
      dockerfile: build/Dockerfile_rating_service
    ports:
      - "7000:7000"
    environment:
      - DATASOURCE=host=postgres user=postgres password=postgres dbname=rating_service port=5432
      - PORT=7000
    depends_on:
        postgres:
          condition: service_healthy

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    volumes:
      - ../docs:/usr/docs
    ports:
      - "8080:8080"
    environment:
      - SWAGGER_JSON=/usr/docs/swagger.json
    depends_on:
      rating-service:
        condition: service_started
      notification-service:
        condition: service_started


  notification-service:
    build:
      context: ..
      dockerfile: build/Dockerfile_notification_service
    ports:
      - "7001:7001"
    environment:
      - DATASOURCE=host=postgres user=postgres password=postgres dbname=rating_service port=5432
      - PORT=7001
      - REDIS_URL=redis:6379
    depends_on:
      postgres:
        condition: service_healthy